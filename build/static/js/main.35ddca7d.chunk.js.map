{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/ProductCarousel.js","actions/productActions.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","store","createStore","composeWithDevTools","applyMiddleware","thunk","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","logout","dispatch","removeItem","document","location","href","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","ProductCarousel","useEffect","a","axios","get","data","response","message","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","pageNumber","listProducts","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","getState","config","headers","Authorization","token","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","showAlert","setShowAlert","onConfirm","onCancel","deliverOrder","App","path","component","exact","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"iMA+BMA,EAAUC,0BAAgB,CAC9BC,YCLgC,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACtE,OAAQA,EAAOC,MACb,IC7BgC,uBD8B9B,MAAO,CAAEC,SAAS,EAAMH,SAAU,IACpC,IC9BgC,uBD+B9B,MAAO,CACLG,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,MAAOJ,EAAOG,QAAQC,MACtBC,KAAML,EAAOG,QAAQE,MAEzB,ICpC6B,oBDqC3B,MAAO,CAAEH,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDRXS,eCYmC,WAG/B,IAFJT,EAEG,uDAFK,CAAEU,QAAS,CAAEC,QAAS,KAC9BT,EACG,uCACH,OAAQA,EAAOC,MACb,IC9CmC,0BD+CjC,OAAO,2BAAKH,GAAZ,IAAmBI,SAAS,IAC9B,IC/CmC,0BDgDjC,MAAO,CAAEA,SAAS,EAAOM,QAASR,EAAOG,SAC3C,IChDgC,uBDiD9B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDvBXY,cC2BkC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,ICvDkC,yBDwDhC,MAAO,CAAEC,SAAS,GACpB,ICxDkC,yBDyDhC,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,ICzD+B,sBD0D7B,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDnCXc,cCuCkC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IChEkC,yBDiEhC,MAAO,CAAEC,SAAS,GACpB,ICjEkC,yBDkEhC,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC1D,IClE+B,sBDmE7B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICnEgC,uBDoE9B,MAAO,GACT,QACE,OAAOL,IDjDXe,cCqDkC,WAAsC,IAArCf,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACvE,OAAQA,EAAOC,MACb,IC1EkC,yBD2EhC,MAAO,CAAEC,SAAS,GACpB,IC3EkC,yBD4EhC,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC1D,IC5E+B,sBD6E7B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,IC7EgC,uBD8E9B,MAAO,CAAEK,QAAS,IACpB,QACE,OAAOV,ID/DXgB,oBCmEwC,WAAyB,IAAxBhB,EAAuB,uDAAf,GAAIE,EAAW,uCAChE,OAAQA,EAAOC,MACb,ICpFyC,gCDqFvC,MAAO,CAAEC,SAAS,GACpB,ICrFyC,gCDsFvC,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,ICtFsC,6BDuFpC,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICvFuC,8BDwFrC,MAAO,GACT,QACE,OAAOL,ID7EXiB,gBCiFoC,WAAuC,IAAtCjB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCAC1E,OAAQA,EAAOC,MACb,IC9F+B,sBD+F7B,MAAO,CAAEC,SAAS,EAAMH,SAAU,IACpC,IC/F+B,sBDgG7B,MAAO,CAAEG,SAAS,EAAOH,SAAUC,EAAOG,SAC5C,IChG4B,mBDiG1B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,IDzFXkB,KG/ByB,WAGrB,IAFJlB,EAEG,uDAFK,CAAEmB,UAAW,GAAIC,gBAAiB,IAC1ClB,EACG,uCACH,OAAQA,EAAOC,MACb,ICbyB,gBDcvB,IAAMkB,EAAOnB,EAAOG,QAEdiB,EAAYtB,EAAMmB,UAAUI,MAAK,SAACC,GAAD,OAAOA,EAAEd,UAAYW,EAAKX,WAEjE,OAAIY,EACK,2BACFtB,GADL,IAEEmB,UAAWnB,EAAMmB,UAAUM,KAAI,SAACD,GAAD,OAC7BA,EAAEd,UAAYY,EAAUZ,QAAUW,EAAOG,OAItC,2BACFxB,GADL,IAEEmB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBE,MAGtC,IC7B4B,mBD8B1B,OAAO,2BACFrB,GADL,IAEEmB,UAAWnB,EAAMmB,UAAUO,QAAO,SAACF,GAAD,OAAOA,EAAEd,UAAYR,EAAOG,aAElE,ICjCsC,6BDkCpC,OAAO,2BACFL,GADL,IAEEoB,gBAAiBlB,EAAOG,UAE5B,ICrCoC,2BDsClC,OAAO,2BACFL,GADL,IAEE2B,cAAezB,EAAOG,UAE1B,IC7C4B,aD8C1B,OAAO,2BACFL,GADL,IAEEmB,UAAW,KAEf,QACE,OAAOnB,IHZX4B,UKX8B,WAAyB,IAAxB5B,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAQA,EAAOC,MACb,IC/B8B,qBDgC5B,MAAO,CAAEC,SAAS,GACpB,IChC8B,qBDiC5B,MAAO,CAAEA,SAAS,EAAOyB,SAAU3B,EAAOG,SAC5C,ICjC2B,kBDkCzB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,IClCuB,cDmCrB,MAAO,GACT,QACE,OAAOL,ILCX8B,aKGiC,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIE,EAAW,uCACzD,OAAQA,EAAOC,MACb,ICzCiC,wBD0C/B,MAAO,CAAEC,SAAS,GACpB,IC1CiC,wBD2C/B,MAAO,CAAEA,SAAS,EAAOyB,SAAU3B,EAAOG,SAC5C,IC3C8B,qBD4C5B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICjDuB,cDkDrB,MAAO,GACT,QACE,OAAOL,ILbX+B,YKiBgC,WAAmC,IAAlC/B,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAClE,OAAQA,EAAOC,MACb,ICpDgC,uBDqD9B,OAAO,2BAAKH,GAAZ,IAAmBI,SAAS,IAC9B,ICrDgC,uBDsD9B,MAAO,CAAEA,SAAS,EAAO4B,KAAM9B,EAAOG,SACxC,ICtD6B,oBDuD3B,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICvD8B,qBDwD5B,MAAO,CAAE2B,KAAM,IACjB,QACE,OAAOhC,IL3BXiC,kBK+BsC,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAQA,EAAOC,MACb,IC9DuC,8BD+DrC,MAAO,CAAEC,SAAS,GACpB,IC/DuC,8BDgErC,MAAO,CAAEA,SAAS,EAAOS,SAAS,EAAMgB,SAAU3B,EAAOG,SAC3D,IChEoC,2BDiElC,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,ICjEqC,4BDkEnC,MAAO,GACT,QACE,OAAOL,ILzCXkC,SK6C6B,WAAoC,IAAnClC,EAAkC,uDAA1B,CAAEmC,MAAO,IAAMjC,EAAW,uCAChE,OAAQA,EAAOC,MACb,ICxE6B,oBDyE3B,MAAO,CAAEC,SAAS,GACpB,ICzE6B,oBD0E3B,MAAO,CAAEA,SAAS,EAAO+B,MAAOjC,EAAOG,SACzC,IC1E0B,iBD2ExB,MAAO,CAAED,SAAS,EAAOI,MAAON,EAAOG,SACzC,IC3E2B,kBD4EzB,MAAO,CAAE8B,MAAO,IAClB,QACE,OAAOnC,ILvDXoC,WK2D+B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACb,IClF+B,sBDmF7B,MAAO,CAAEC,SAAS,GACpB,ICnF+B,sBDoF7B,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,ICpF4B,mBDqF1B,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,QACE,OAAOL,ILnEXqC,WKuE+B,WAAmC,IAAlCrC,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCACjE,OAAQA,EAAOC,MACb,IC3F+B,sBD4F7B,MAAO,CAAEC,SAAS,GACpB,IC5F+B,sBD6F7B,MAAO,CAAEA,SAAS,EAAOS,SAAS,GACpC,IC7F4B,mBD8F1B,MAAO,CAAET,SAAS,EAAOI,MAAON,EAAOG,SACzC,IC9F6B,oBD+F3B,MAAO,CACL2B,KAAM,IAEV,QACE,OAAOhC,ILnFXsC,YOtBgC,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACb,IC3BgC,uBD4B9B,MAAO,CACLC,SAAS,GAEb,IC9BgC,uBD+B9B,MAAO,CACLA,SAAS,EACTS,SAAS,EACT0B,MAAOrC,EAAOG,SAElB,ICnC6B,oBDoC3B,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,ICvC8B,qBDwC5B,MAAO,GACT,QACE,OAAOL,IPGXwC,aOCiC,WAAoE,IAAnExC,EAAkE,uDAA1D,CAAEI,SAAS,EAAOmC,MAAO,CAAEE,WAAY,KAAQvC,EAAW,uCACpG,OAAQA,EAAOC,MACb,IC9CiC,wBD+C/B,OAAO,2BACFH,GADL,IAEEI,SAAS,IAEb,IClDiC,wBDmD/B,MAAO,CACLA,SAAS,EACTmC,MAAOrC,EAAOG,SAElB,ICtD8B,qBDuD5B,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,QACE,OAAOL,IPlBX0C,SOsB6B,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACb,IChE6B,oBDiE3B,MAAO,CACLC,SAAS,GAEb,ICnE6B,oBDoE3B,MAAO,CACLA,SAAS,EACTS,SAAS,GAEb,ICvE0B,iBDwExB,MAAO,CACLT,SAAS,EACTI,MAAON,EAAOG,SAElB,IC3E2B,kBD4EzB,MAAO,GACT,QACE,OAAOL,IPxCX2C,aO4CiC,WAAyB,IAAxB3C,EAAuB,uDAAf,GAAIE,EAAW,uCACzD,OAAQA,EAAOC,MACb,ICzEiC,wBD0E/B,MAAO,CACLC,SAAS,GAEb,IC5EiC,wBD6E/B,MAAO,CACLA,SAAS,EACTS,SAAS,GAEb,IChF8B,qBDiF5B,MAAO,CACLT,SAAS,EACTI,MAAON,EAAOG,SAElB,ICpF+B,sBDqF7B,MAAO,GACT,QACE,OAAOL,IP9DX4C,YOkEgC,WAAqC,IAApC5C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCACpE,OAAQA,EAAOC,MACb,ICzGiC,wBD0G/B,MAAO,CACLC,SAAS,GAEb,IC5GiC,wBD6G/B,MAAO,CACLA,SAAS,EACTyC,OAAQ3C,EAAOG,SAEnB,IChH8B,qBDiH5B,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,ICpH+B,sBDqH7B,MAAO,CAAEwC,OAAQ,IACnB,QACE,OAAO7C,IPpFX8C,UOwF8B,WAAqC,IAApC9C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCAClE,OAAQA,EAAOC,MACb,IC3H8B,qBD4H5B,MAAO,CACLC,SAAS,GAEb,IC9H8B,qBD+H5B,MAAO,CACLA,SAAS,EACTyC,OAAQ3C,EAAOG,SAEnB,IClI2B,kBDmIzB,MAAO,CACLD,SAAS,EACTI,MAAON,EAAOG,SAElB,QACE,OAAOL,MPtGP+C,EAAuBC,aAAaC,QAAQ,aAAeC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAE3GG,EAAsBJ,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAIxGI,EAAe,CACnBnC,KAAM,CAAEC,UAAW4B,EAAsB3B,gBAHR4B,aAAaC,QAAQ,mBAAqBC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,IAIjIrB,UAAW,CAAEC,SAAUuB,IASVE,EANDC,sBACZ1D,EACAwD,EACAG,8BAAoBC,0BAAgBC,O,iGStCvBC,EA5BG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACHC,mBAAS,IADN,mBAC1BC,EAD0B,KACjBC,EADiB,KAYjC,OACE,kBAACC,EAAA,EAAD,CAAMC,SAVc,SAACC,GACrBA,EAAEC,iBACEL,EAAQM,OACVR,EAAQS,KAAR,kBAAwBP,IAExBF,EAAQS,KAAK,MAKgBC,QAAM,GACnC,kBAACN,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLqE,KAAK,IACLC,SAAU,SAACP,GAAD,OAAOH,EAAWG,EAAEQ,OAAOC,QACrCC,YAAY,qBACZC,UAAU,oBAEZ,kBAACC,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,kBAAkBF,UAAU,OAA1D,Y,yCCiBOG,EAAS,kBAAM,SAACC,GAC3BjC,aAAakC,WAAW,YACxBlC,aAAakC,WAAW,aACxBlC,aAAakC,WAAW,mBACxBlC,aAAakC,WAAW,iBACxBD,EAAS,CAAE9E,KJ3Cc,gBI4CzB8E,EAAS,CAAE9E,KJnCqB,uBIoChC8E,EAAS,CAAE9E,KF/BsB,wBEgCjC8E,EAAS,CAAE9E,KJ3BkB,oBI4B7BgF,SAASC,SAASC,KAAO,WCqBZC,EA/DA,WACb,IAAML,EAAWM,cAGT1D,EADU2D,aAAY,SAACxF,GAAD,OAAWA,EAAM4B,aACvCC,SAMR,OACE,gCACE,kBAAC4D,EAAA,EAAD,CAAQC,GAAG,OAAOX,QAAQ,OAAOY,OAAO,KAAKC,kBAAgB,GAC3D,kBAACC,EAAA,EAAD,KACE,kBAAC,gBAAD,CAAeC,GAAG,KAChB,kBAACL,EAAA,EAAOM,MAAR,iBAEF,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,oBAClB,kBAAC,IAAD,CAAOC,OAAQ,gBAAGxC,EAAH,EAAGA,QAAH,OAAiB,kBAAC,EAAD,CAAWA,QAASA,OACpD,kBAACyC,EAAA,EAAD,CAAKxB,UAAU,WACb,kBAAC,gBAAD,CAAeiB,GAAG,SAChB,kBAACO,EAAA,EAAIC,KAAL,KACE,uBAAGzB,UAAU,yBADf,UAIDhD,EACC,kBAAC0E,EAAA,EAAD,CAAaC,MAAO3E,EAAS2C,KAAM2B,GAAG,YACpC,kBAAC,gBAAD,CAAeL,GAAG,YAChB,kBAACS,EAAA,EAAYE,KAAb,iBAEF,kBAACF,EAAA,EAAYE,KAAb,CAAkBC,QAzBZ,WACpBzB,EAASD,OAwBK,WAKF,kBAAC,gBAAD,CAAec,GAAG,UAChB,kBAACO,EAAA,EAAIC,KAAL,KACE,uBAAGzB,UAAU,gBADf,aAKHhD,GAAYA,EAAS8E,SACpB,kBAACJ,EAAA,EAAD,CAAaC,MAAM,QAAQL,GAAG,aAC5B,kBAAC,gBAAD,CAAeL,GAAG,mBAChB,kBAACS,EAAA,EAAYE,KAAb,eAEF,kBAAC,gBAAD,CAAeX,GAAG,sBAChB,kBAACS,EAAA,EAAYE,KAAb,kBAEF,kBAAC,gBAAD,CAAeX,GAAG,oBAChB,kBAACS,EAAA,EAAYE,KAAb,uB,iBC5CLG,EAZA,WACb,OACE,gCACE,kBAACf,EAAA,EAAD,KACE,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKjC,UAAU,oBAAf,8B,SCNJkC,EAAS,SAAC,GAA4B,IAA1BpC,EAAyB,EAAzBA,MAAOqC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC7B,OACE,yBAAKpC,UAAU,UACb,8BACE,uBACEqC,MAAO,CAAED,SACTpC,UACEF,GAAS,EACL,cACAA,GAAS,GACT,uBACA,iBAIV,8BACE,uBACEuC,MAAO,CAAED,SACTpC,UACEF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BACE,uBACEuC,MAAO,CAAED,SACTpC,UACEF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BACE,uBACEuC,MAAO,CAAED,SACTpC,UACEF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BACE,uBACEuC,MAAO,CAAED,SACTpC,UACEF,GAAS,EACL,cACAA,GAAS,IACT,uBACA,iBAIV,8BAAOqC,GAAQA,KAKrBD,EAAOI,aAAe,CACpBF,MAAO,WAGMF,QC1CAK,EA3BC,SAAC,GAAiB,IAAf1G,EAAc,EAAdA,QACjB,OACE,kBAAC2G,EAAA,EAAD,CAAMxC,UAAU,oBACd,kBAAC,OAAD,CAAMiB,GAAE,mBAAcpF,EAAQ4G,MAC5B,kBAACD,EAAA,EAAKE,IAAN,CAAUC,IAAK9G,EAAQ+G,MAAO1C,QAAQ,SAGxC,kBAACsC,EAAA,EAAKK,KAAN,KACE,kBAAC,OAAD,CAAM5B,GAAE,mBAAcpF,EAAQ4G,MAC5B,kBAACD,EAAA,EAAKM,MAAN,CAAYC,GAAG,OACb,gCAASlH,EAAQ8D,QAIrB,kBAAC6C,EAAA,EAAKQ,KAAN,CAAWD,GAAG,OACZ,kBAAC,EAAD,CACEjD,MAAOjE,EAAQoH,OACfd,KAAI,UAAKtG,EAAQqH,WAAb,eAIR,kBAACV,EAAA,EAAKQ,KAAN,CAAWD,GAAG,MAAd,IAAqBlH,EAAQsH,U,SCvB/BC,EAAU,SAAC,GAA2B,IAAzBlD,EAAwB,EAAxBA,QAASmD,EAAe,EAAfA,SAC1B,OAAO,kBAACC,EAAA,EAAD,CAAOpD,QAASA,GAAUmD,IAGnCD,EAAQd,aAAe,CACrBpC,QAAS,QAGIkD,Q,SCSAG,EAjBA,WACb,OACE,kBAACC,EAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACLrB,MAAO,CACLsB,MAAO,QACPC,OAAQ,QACRC,OAAQ,OACRC,QAAS,UAGX,0BAAM9D,UAAU,WAAhB,gB,SCYS+D,EAvBE,SAAC,GAAoD,IAAlDtI,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAA0C,IAApCoG,eAAoC,aAAnB7C,eAAmB,MAAT,GAAS,EACnE,OACExD,EAAQ,GACN,kBAACuI,EAAA,EAAD,KACG,YAAIC,MAAMxI,GAAOyI,QAAQtH,KAAI,SAACD,GAAD,OAC5B,kBAAC,gBAAD,CACEwH,IAAKxH,EAAI,EACTsE,GACGa,EAAD,6BAI0BnF,EAAI,GAH1BsC,EAAO,kBACMA,EADN,iBACsBtC,EAAI,GAD1B,gBAEIA,EAAI,IAIrB,kBAACqH,EAAA,EAAWpC,KAAZ,CAAiBwC,OAAQzH,EAAI,IAAMjB,GAAOiB,EAAI,S,kBCqB3C0H,EAhCS,WACtB,IAAMjE,EAAWM,cAEXtE,EAAkBuE,aAAY,SAACxF,GAAD,OAAWA,EAAMiB,mBAC7Cb,EAA6Ba,EAA7Bb,QAASI,EAAoBS,EAApBT,MAAOP,EAAagB,EAAbhB,SAMxB,OAJAkJ,qBAAU,WACRlE,ECwL2B,uCAAM,WAAOA,GAAP,iBAAAmE,EAAA,sEAEjCnE,EAAS,CAAE9E,KjB9KoB,wBiB4KE,SAIVkJ,IAAMC,IAAN,qBAJU,gBAIzBC,EAJyB,EAIzBA,KAERtE,EAAS,CACP9E,KjBlL6B,sBiBmL7BE,QAASkJ,IARsB,gDAWjCtE,EAAS,CACP9E,KjBtL0B,mBiBuL1BE,QACE,KAAMmJ,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAhBmB,yDAAN,yDDvL1B,CAACxE,IAEG7E,EACL,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GAE3B,kBAACkJ,EAAA,EAAD,CAAUC,MAAM,QAAQ9E,UAAU,WAC/B5E,EAASwB,KAAI,SAACf,GAAD,OACZ,kBAACgJ,EAAA,EAASjD,KAAV,CAAeuC,IAAKtI,EAAQ4G,KAC1B,kBAAC,OAAD,CAAMxB,GAAE,mBAAcpF,EAAQ4G,MAC5B,kBAACsC,EAAA,EAAD,CAAOpC,IAAK9G,EAAQ+G,MAAOoC,IAAKnJ,EAAQ8D,KAAMsF,OAAK,IACnD,kBAACJ,EAAA,EAASK,QAAV,CAAkBlF,UAAU,oBAC1B,4BACGnE,EAAQ8D,KADX,MACoB9D,EAAQsH,MAD5B,a,QE1BRgC,GAAO,SAAC,GAAsC,IAApCxD,EAAmC,EAAnCA,MAAOyD,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAClC,OACE,kBAACC,EAAA,EAAD,KACE,+BAAQ3D,GACR,0BAAMhC,KAAK,cAAc4F,QAASH,IAClC,0BAAMzF,KAAK,UAAU4F,QAASF,MAKpCF,GAAK7C,aAAe,CAClBX,MAAO,qBACPyD,YAAa,sCACbC,SAAU,mDAGGF,UC0CAK,GAjDI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEdxG,EAAUwG,EAAMC,OAAOzG,QACvB0G,EAAaF,EAAMC,OAAOC,YAAc,EAExCvF,EAAWM,cAEXxF,EAAcyF,aAAY,SAACxF,GAAD,OAAWA,EAAMD,eACzCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,KAAMD,EAAUP,EAAVO,MAMxC,OAJA6I,qBAAU,WACRlE,EFIwB,eAACnB,EAAD,uDAAW,GAAI0G,EAAf,uDAA4B,GAA5B,8CAAmC,WAAOvF,GAAP,iBAAAmE,EAAA,6DAC7DnE,EAAS,CAAE9E,KjB5BuB,yBiB2B2B,kBAGpCkJ,IAAMC,IAAN,gCAAmCxF,EAAnC,uBAAyD0G,IAHrB,gBAGnDjB,EAHmD,EAGnDA,KACRtE,EAAS,CAAE9E,KjB9BqB,uBiB8BOE,QAASkJ,IAJW,gDAM3DtE,EAAS,CACP9E,KjBhC2B,oBiBiC3BE,QAAS,KAAMmJ,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UARpC,yDAAnC,sDEJfgB,CAAa3G,EAAS0G,MAC9B,CAACvF,EAAUnB,EAAS0G,IAGrB,oCACE,kBAAC,GAAD,MACE1G,EAGE,kBAAC,OAAD,CAAMgC,GAAG,IAAIjB,UAAU,iBAAvB,WAFF,kBAAC,EAAD,MAMF,+CACCzE,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GAEvB,oCACE,kBAACqG,EAAA,EAAD,KACG5G,EAASwB,KAAI,SAACf,GAAD,OACZ,kBAACoG,EAAA,EAAD,CAAKkC,IAAKtI,EAAQ4G,IAAKoD,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC/C,kBAAC,EAAD,CAASnK,QAASA,SAIxB,kBAAC,EAAD,CACEJ,MAAOA,EACPC,KAAMA,EACNuD,QAASA,GAAoB,Q,UC0K9BgH,GAjNO,SAAC,GAAwB,IAAtBlH,EAAqB,EAArBA,QAAS0G,EAAY,EAAZA,MAAY,EACtBzG,mBAAS,GADa,mBACrCkH,EADqC,KAChCC,EADgC,OAEhBnH,mBAAS,GAFO,mBAErCiE,EAFqC,KAE7BmD,EAF6B,OAGdpH,mBAAS,IAHK,mBAGrCqH,EAHqC,KAG5BC,EAH4B,KAKtClG,EAAWM,cAEX9E,EAAiB+E,aAAY,SAACxF,GAAD,OAAWA,EAAMS,kBAC5CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAGhBmB,EADU2D,aAAY,SAACxF,GAAD,OAAWA,EAAM4B,aACvCC,SAEFb,EAAsBwE,aAAY,SAACxF,GAAD,OAAWA,EAAMgB,uBAE9CoK,EAGPpK,EAHFH,QACSwK,EAEPrK,EAFFZ,QACOkL,EACLtK,EADFR,MAGF2I,qBAAU,WHMsB,IAAChD,EGL3BiF,IACFH,EAAU,GACVE,EAAW,KAERzK,EAAQ4G,KAAO5G,EAAQ4G,MAAQgD,EAAMC,OAAOpE,KAC/ClB,GHA6BkB,EGADmE,EAAMC,OAAOpE,GHAb,uCAAQ,WAAOlB,GAAP,iBAAAmE,EAAA,6DACxCnE,EAAS,CAAE9E,KjBrC0B,4BiBoCG,kBAGfkJ,IAAMC,IAAN,wBAA2BnD,IAHZ,gBAG9BoD,EAH8B,EAG9BA,KACRtE,EAAS,CAAE9E,KjBvCwB,0BiBuCOE,QAASkJ,IAJb,gDAMtCtE,EAAS,CACP9E,KjBzC8B,uBiB0C9BE,QAAS,KAAMmJ,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UARzD,yDAAR,wDGC5BxE,EAAS,CAAE9E,KpBhB0B,mCoBkBtC,CAAC8E,EAAUqF,EAAOc,IAgBrB,OACE,oCACE,kBAAC,OAAD,CAAMvG,UAAU,qBAAqBiB,GAAG,KAAxC,WAGC1F,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GAEvB,oCACE,kBAAC,GAAD,CAAMgG,MAAO9F,EAAQ8D,OACrB,kBAACqC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAACf,EAAA,EAAD,CAAOpC,IAAK9G,EAAQ+G,MAAOoC,IAAKnJ,EAAQ8D,KAAMsF,OAAK,KAErD,kBAAChD,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAACY,GAAA,EAAD,CAAWxG,QAAQ,SACjB,kBAACwG,GAAA,EAAU9E,KAAX,KACE,4BAAK/F,EAAQ8D,OAEf,kBAAC+G,GAAA,EAAU9E,KAAX,KACE,kBAAC,EAAD,CACE9B,MAAOjE,EAAQoH,OACfd,KAAI,UAAKtG,EAAQqH,WAAb,eAGR,kBAACwD,GAAA,EAAU9E,KAAX,gBAAyB/F,EAAQsH,OACjC,kBAACuD,GAAA,EAAU9E,KAAX,qBACgB/F,EAAQuJ,eAI5B,kBAACnD,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAACtD,EAAA,EAAD,KACE,kBAACkE,GAAA,EAAD,CAAWxG,QAAQ,SACjB,kBAACwG,GAAA,EAAU9E,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,KACE,oCAAUpG,EAAQsH,UAKxB,kBAACuD,GAAA,EAAU9E,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,KACGpG,EAAQ8K,aAAe,EAAI,WAAa,kBAK9C9K,EAAQ8K,aAAe,GACtB,kBAACD,GAAA,EAAU9E,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,KACE,kBAAC9C,EAAA,EAAKO,QAAN,CACEqD,GAAG,SACHjD,MAAOoG,EACPtG,SAAU,SAACP,GAAD,OAAO8G,EAAO9G,EAAEQ,OAAOC,SAEhC,YAAImE,MAAMpI,EAAQ8K,cAAczC,QAAQtH,KACvC,SAACD,GAAD,OACE,4BAAQwH,IAAKxH,EAAI,EAAGmD,MAAOnD,EAAI,GAC5BA,EAAI,UAUrB,kBAAC+J,GAAA,EAAU9E,KAAX,KACE,kBAAC3B,EAAA,EAAD,CACE4B,QA7FC,WACvB9C,EAAQS,KAAR,gBAAsBiG,EAAMC,OAAOpE,GAAnC,gBAA6C4E,KA6FvBlG,UAAU,YACV1E,KAAK,SACLsL,SAAmC,IAAzB/K,EAAQ8K,cAJpB,oBAaV,kBAAC3E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK6D,GAAI,GACP,uCAC4B,IAA3BjK,EAAQC,QAAQ+K,QAAgB,kBAAC,EAAD,mBACjC,kBAACH,GAAA,EAAD,CAAWxG,QAAQ,SAChBrE,EAAQC,QAAQc,KAAI,SAACkK,GAAD,OACnB,kBAACJ,GAAA,EAAU9E,KAAX,CAAgBuC,IAAK2C,EAAOrE,KAC1B,gCAASqE,EAAOnH,MAChB,kBAAC,EAAD,CAAQG,MAAOgH,EAAO7D,SACtB,2BAAI6D,EAAOC,UAAUC,UAAU,EAAG,KAClC,2BAAIF,EAAOT,aAGf,kBAACK,GAAA,EAAU9E,KAAX,KACE,uDACC2E,GACC,kBAAC,EAAD,CAASrG,QAAQ,WAAjB,iCAIDsG,GAAwB,kBAAC,EAAD,MACxBC,GACC,kBAAC,EAAD,CAASvG,QAAQ,UAAUuG,GAE5BzJ,EACC,kBAACmC,EAAA,EAAD,CAAMC,SA9HN,SAACC,GH8GU,IAAC4H,EAAWH,EG7G3CzH,EAAEC,iBACFc,GH4GgC6G,EG3GVxB,EAAMC,OAAOpE,GH2GQwF,EG3GJ,CACnC7D,SACAoD,WHyG2B,uCAAuB,WACxDjG,EACA8G,GAFwD,qBAAA3C,EAAA,sEAKtDnE,EAAS,CACP9E,KjB/IuC,kCiByIa,EAWlD4L,IADWlK,EAVuC,EAUpDD,UAAaC,SAGTmK,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYrK,EAASsK,SAhBgB,SAoBhD9C,IAAM+C,KAAN,wBAA4BN,EAA5B,YAAiDH,EAAQK,GApBT,OAsBtD/G,EAAS,CACP9E,KjB/JuC,kCiBwIa,gDA8BtC,kCAJVsJ,EACJ,KAAMD,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAEVxE,EAASD,KAEXC,EAAS,CACP9E,KjBzKoC,6BiB0KpCE,QAASoJ,IAnC2C,yDAAvB,4DGiBT,kBAACzF,EAAA,EAAKqI,MAAN,CAAYC,UAAU,UACpB,kBAACtI,EAAA,EAAKuI,MAAN,eACA,kBAACvI,EAAA,EAAKO,QAAN,CACEqD,GAAG,SACHjD,MAAOmD,EACPrD,SAAU,SAACP,GAAD,OAAO+G,EAAU/G,EAAEQ,OAAOC,SAEpC,4BAAQA,MAAM,IAAd,aACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,iBACA,4BAAQA,MAAM,KAAd,mBAGJ,kBAACX,EAAA,EAAKqI,MAAN,CAAYC,UAAU,WACpB,kBAACtI,EAAA,EAAKuI,MAAN,gBACA,kBAACvI,EAAA,EAAKO,QAAN,CACEqD,GAAG,WACH4E,IAAI,IACJ7H,MAAOuG,EACPzG,SAAU,SAACP,GAAD,OAAOiH,EAAWjH,EAAEQ,OAAOC,WAGzC,kBAACG,EAAA,EAAD,CACE2G,SAAUJ,EACVlL,KAAK,SACL4E,QAAQ,WAHV,WASA,kBAAC,EAAD,eACS,kBAAC,OAAD,CAAMe,GAAG,UAAT,WADT,qBAC4D,YC1MzE2G,GAAY,SAACtG,EAAI4E,GAAL,8CAAa,WAAO9F,EAAU8G,GAAjB,iBAAA3C,EAAA,sEACbC,IAAMC,IAAN,wBAA2BnD,IADd,gBAC5BoD,EAD4B,EAC5BA,KAERtE,EAAS,CACP9E,KnBZyB,gBmBazBE,QAAS,CACPK,QAAS6I,EAAKjC,IACd9C,KAAM+E,EAAK/E,KACXiD,MAAO8B,EAAK9B,MACZO,MAAOuB,EAAKvB,MACZwD,aAAcjC,EAAKiC,aACnBT,SAIJ/H,aAAa0J,QAAQ,YAAaxJ,KAAKyJ,UAAUZ,IAAW7K,KAAKC,YAf7B,2CAAb,yDCyGVyL,GA1GI,SAAC,GAAkC,IAAhCtC,EAA+B,EAA/BA,MAAOlF,EAAwB,EAAxBA,SAAUxB,EAAc,EAAdA,QAC/BkI,EAAYxB,EAAMC,OAAOpE,GAEzB4E,EAAM3F,EAASyH,OAASC,OAAO1H,EAASyH,OAAOE,MAAM,KAAK,IAAM,EAEhE9H,EAAWM,cAGTpE,EADKqE,aAAY,SAACxF,GAAD,OAAWA,EAAMkB,QAClCC,UAERgI,qBAAU,WACJ2C,GACF7G,EAASwH,GAAUX,EAAWf,MAE/B,CAAC9F,EAAU6G,EAAWf,IAEzB,IAAMiC,EAAwB,SAAC7G,GAC7BlB,EDE0B,SAACkB,GAAD,OAAQ,SAAClB,EAAU8G,GAC/C9G,EAAS,CACP9E,KnB1B4B,mBmB2B5BE,QAAS8F,IAGXnD,aAAa0J,QAAQ,YAAaxJ,KAAKyJ,UAAUZ,IAAW7K,KAAKC,aCRtD8L,CAAe9G,KAO1B,OACE,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK6D,GAAI,GACP,6CACsB,IAArBxJ,EAAUuK,OACT,kBAAC,EAAD,2BACqB,kBAAC,OAAD,CAAM5F,GAAG,KAAT,YAGnB,kBAACyF,GAAA,EAAD,CAAWxG,QAAQ,SAChB5D,EAAUM,KAAI,SAACJ,GAAD,OACb,kBAACkK,GAAA,EAAU9E,KAAX,CAAgBuC,IAAK3H,EAAKX,SACxB,kBAACmG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAACf,EAAA,EAAD,CAAOpC,IAAKnG,EAAKoG,MAAOoC,IAAKxI,EAAKmD,KAAMsF,OAAK,EAACoD,SAAO,KAEvD,kBAACpG,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAAC,OAAD,CAAM7E,GAAE,mBAAczE,EAAKX,UAAYW,EAAKmD,OAE9C,kBAACsC,EAAA,EAAD,CAAK6D,GAAI,GAAT,IAActJ,EAAK2G,OACnB,kBAAClB,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAAC3G,EAAA,EAAKO,QAAN,CACEqD,GAAG,SACHjD,MAAOtD,EAAK0J,IACZtG,SAAU,SAACP,GAAD,OACRe,EACEwH,GAAUpL,EAAKX,QAASoM,OAAO5I,EAAEQ,OAAOC,WAI3C,YAAImE,MAAMzH,EAAKmK,cAAczC,QAAQtH,KAAI,SAACD,GAAD,OACxC,4BAAQwH,IAAKxH,EAAI,EAAGmD,MAAOnD,EAAI,GAC5BA,EAAI,QAKb,kBAACsF,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAAC7F,EAAA,EAAD,CACE3E,KAAK,SACL4E,QAAQ,QACR2B,QAAS,kBAAMsG,EAAsB3L,EAAKX,WAE1C,uBAAGmE,UAAU,0BAS/B,kBAACiC,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAACtD,EAAA,EAAD,KACE,kBAACkE,GAAA,EAAD,CAAWxG,QAAQ,SACjB,kBAACwG,GAAA,EAAU9E,KAAX,KACE,yCACatF,EAAUgM,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAK0J,MAAK,GAD7D,WADF,IAMG5J,EACEgM,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAK0J,IAAM1J,EAAK2G,QAAO,GACnDqF,QAAQ,IAEb,kBAAC9B,GAAA,EAAU9E,KAAX,KACE,kBAAC3B,EAAA,EAAD,CACE3E,KAAK,SACL0E,UAAU,YACV4G,SAA+B,IAArBtK,EAAUuK,OACpBhF,QA1EU,WACtB9C,EAAQS,KAAK,8BAqEH,6BClFCiJ,GAZO,SAAC,GAAkB,IAAhBpF,EAAe,EAAfA,SACvB,OACE,kBAACrC,EAAA,EAAD,KACE,kBAACgB,EAAA,EAAD,CAAKhC,UAAU,6BACb,kBAACiC,EAAA,EAAD,CAAKyG,GAAI,GAAI5C,GAAI,GACdzC,MCkEIsF,GAjEK,SAAC,GAA2B,IAAzBpI,EAAwB,EAAxBA,SAAUxB,EAAc,EAAdA,QAAc,EACnBC,mBAAS,IADU,mBACtC4J,EADsC,KAC/BC,EAD+B,OAEb7J,mBAAS,IAFI,mBAEtC8J,EAFsC,KAE5BC,EAF4B,KAIvC3I,EAAWM,cAEX3D,EAAY4D,aAAY,SAACxF,GAAD,OAAWA,EAAM4B,aACvCxB,EAA6BwB,EAA7BxB,QAASI,EAAoBoB,EAApBpB,MAAOqB,EAAaD,EAAbC,SAElBgM,EAAWzI,EAASyH,OAASzH,EAASyH,OAAOE,MAAM,KAAK,GAAK,IAEnE5D,qBAAU,WACJtH,GACF+B,EAAQS,KAAKwJ,KAEd,CAACjK,EAAS/B,EAAUgM,IAOvB,OACE,kBAAC,GAAD,KACE,uCACCrN,GAAS,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GACpCJ,GAAW,kBAAC,EAAD,MACZ,kBAAC4D,EAAA,EAAD,CAAMC,SAVY,SAACC,GACrBA,EAAEC,iBACFc,EhBCiB,SAACwI,EAAOE,GAAR,8CAAqB,WAAO1I,GAAP,mBAAAmE,EAAA,6DACxCnE,EAAS,CAAE9E,KJ9BqB,uBI6BQ,SAGhC6L,EAAS,CAAEC,QAAS,CAAE,eAAgB,qBAHN,SAIf5C,IAAM+C,KAAK,mBAAoB,CAAEqB,QAAOE,YAAY3B,GAJrC,gBAI9BzC,EAJ8B,EAI9BA,KACRtE,EAAS,CAAE9E,KJjCmB,qBIiCOE,QAASkJ,IAC9CvG,aAAa0J,QAAQ,WAAYxJ,KAAKyJ,UAAUpD,IANV,kDAQtCtE,EAAS,CAAE9E,KJnCgB,kBImCOE,QAAS,KAAMmJ,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UARzF,0DAArB,sDgBDRqE,CAAML,EAAOE,MASlB,kBAAC3J,EAAA,EAAKqI,MAAN,CAAYC,UAAU,SACpB,kBAACtI,EAAA,EAAKuI,MAAN,sBACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,QACLyE,YAAY,cACZD,MAAO8I,EACPhJ,SAAU,SAACP,GAAD,OAAOwJ,EAASxJ,EAAEQ,OAAOC,WAIvC,kBAACX,EAAA,EAAKqI,MAAN,CAAYC,UAAU,YACpB,kBAACtI,EAAA,EAAKuI,MAAN,iBACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,WACLyE,YAAY,iBACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAY1J,EAAEQ,OAAOC,WAI1C,kBAACG,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,WAA9B,YAKF,kBAAC8B,EAAA,EAAD,CAAKhC,UAAU,QACb,kBAACiC,EAAA,EAAD,qBACgB,IACd,kBAAC,OAAD,CAAMhB,GAAI+H,EAAQ,6BAAyBA,GAAa,aAAxD,gBCqCKE,GA7FQ,SAAC,GAA2B,IAAzB3I,EAAwB,EAAxBA,SAAUxB,EAAc,EAAdA,QAAc,EACxBC,mBAAS,IADe,mBACzCW,EADyC,KACnCwJ,EADmC,OAEtBnK,mBAAS,IAFa,mBAEzC4J,EAFyC,KAElCC,EAFkC,OAGhB7J,mBAAS,IAHO,mBAGzC8J,EAHyC,KAG/BC,EAH+B,OAIF/J,mBAAS,IAJP,mBAIzCoK,EAJyC,KAIxBC,EAJwB,OAKlBrK,mBAAS,MALS,mBAKzC4F,EALyC,KAKhC0E,EALgC,KAO1ClJ,EAAWM,cAEXzD,EAAe0D,aAAY,SAACxF,GAAD,OAAWA,EAAM8B,gBAC1C1B,EAA6B0B,EAA7B1B,QAASI,EAAoBsB,EAApBtB,MAAOqB,EAAaC,EAAbD,SAElBgM,EAAWzI,EAASyH,OAASzH,EAASyH,OAAOE,MAAM,KAAK,GAAK,IAEnE5D,qBAAU,WACJtH,GACF+B,EAAQS,KAAKwJ,KAEd,CAACjK,EAAS/B,EAAUgM,IAWvB,OACE,kBAAC,GAAD,KACE,uCACCpE,GAAW,kBAAC,EAAD,CAAS1E,QAAQ,UAAU0E,GACtCjJ,GAAS,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GACpCJ,GAAW,kBAAC,EAAD,MACZ,kBAAC4D,EAAA,EAAD,CAAMC,SAfY,SAACC,GACrBA,EAAEC,iBACEwJ,IAAaM,EACfE,EAAW,0BAEXlJ,EjBmBkB,SAACT,EAAMiJ,EAAOE,GAAd,8CAA2B,WAAO1I,GAAP,mBAAAmE,EAAA,sEAE/CnE,EAAS,CACP9E,KJnD+B,0BIsD3B6L,EAAS,CACbC,QAAS,CACP,eAAgB,qBAR2B,SAYxB5C,IAAM+C,KAC3B,aACA,CAAE5H,OAAMiJ,QAAOE,YACf3B,GAf6C,gBAYvCzC,EAZuC,EAYvCA,KAMRtE,EAAS,CACP9E,KJlE+B,wBImE/BE,QAASkJ,IAGXtE,EAAS,CACP9E,KJ5E4B,qBI6E5BE,QAASkJ,IAGXvG,aAAa0J,QAAQ,WAAYxJ,KAAKyJ,UAAUpD,IA5BD,kDA8B/CtE,EAAS,CACP9E,KJ7E4B,qBI8E5BE,QACE,KAAMmJ,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAnCiC,0DAA3B,sDiBnBT2E,CAAS5J,EAAMiJ,EAAOE,MAW7B,kBAAC3J,EAAA,EAAKqI,MAAN,CAAYC,UAAU,QACpB,kBAACtI,EAAA,EAAKuI,MAAN,aACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO8J,EAAQ9J,EAAEQ,OAAOC,WAItC,kBAACX,EAAA,EAAKqI,MAAN,CAAYC,UAAU,SACpB,kBAACtI,EAAA,EAAKuI,MAAN,sBACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,QACLyE,YAAY,cACZD,MAAO8I,EACPhJ,SAAU,SAACP,GAAD,OAAOwJ,EAASxJ,EAAEQ,OAAOC,WAIvC,kBAACX,EAAA,EAAKqI,MAAN,CAAYC,UAAU,YACpB,kBAACtI,EAAA,EAAKuI,MAAN,iBACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,WACLyE,YAAY,iBACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAY1J,EAAEQ,OAAOC,WAI1C,kBAACX,EAAA,EAAKqI,MAAN,CAAYC,UAAU,mBACpB,kBAACtI,EAAA,EAAKuI,MAAN,yBACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,WACLyE,YAAY,mBACZD,MAAOsJ,EACPxJ,SAAU,SAACP,GAAD,OAAOgK,EAAmBhK,EAAEQ,OAAOC,WAIjD,kBAACG,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,WAA9B,aAKF,kBAAC8B,EAAA,EAAD,CAAKhC,UAAU,QACb,kBAACiC,EAAA,EAAD,wBACmB,IACjB,kBAAC,OAAD,CAAMhB,GAAI+H,EAAQ,0BAAsBA,GAAa,UAArD,a,UC4EKQ,GA/JO,SAAC,GAA0B,EAAxBjJ,SAAyB,IAAfxB,EAAc,EAAdA,QAAc,EACvBC,mBAAS,IADc,mBACxCW,EADwC,KAClCwJ,EADkC,OAErBnK,mBAAS,IAFY,mBAExC4J,EAFwC,KAEjCC,EAFiC,OAGf7J,mBAAS,IAHM,mBAGxC8J,EAHwC,KAG9BC,EAH8B,OAID/J,mBAAS,IAJR,mBAIxCoK,EAJwC,KAIvBC,EAJuB,OAKjBrK,mBAAS,MALQ,mBAKxC4F,EALwC,KAK/B0E,EAL+B,KAOzClJ,EAAWM,cAEXxD,EAAcyD,aAAY,SAACxF,GAAD,OAAWA,EAAM+B,eACzC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAGhBH,EADU2D,aAAY,SAACxF,GAAD,OAAWA,EAAM4B,aACvCC,SAGAhB,EADkB2E,aAAY,SAACxF,GAAD,OAAWA,EAAMiC,qBAC/CpB,QAEF+B,EAAc4C,aAAY,SAACxF,GAAD,OAAWA,EAAM4C,eAChC0L,EAA8C1L,EAAvDxC,QAA+BmO,EAAwB3L,EAA/BpC,MAAoBqC,EAAWD,EAAXC,OAEpDsG,qBAAU,WlB8DkB,IAAChD,EkB7DtBtE,EAGEG,GAASA,EAAKwC,OAAQ3D,GAKzBmN,EAAQhM,EAAKwC,MACbkJ,EAAS1L,EAAKyL,SALdxI,EAAS,CAAE9E,KtBnBsB,8BsBoBjC8E,GlBwDuBkB,EkBxDC,UlBwDF,uCAAQ,WAAOlB,EAAU8G,GAAjB,yBAAA3C,EAAA,sEAElCnE,EAAS,CACP9E,KJvF8B,yBIoFE,EAQ9B4L,IADWlK,EAPmB,EAOhCD,UAAaC,SAGTmK,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYrK,EAASsK,SAZJ,SAgBX9C,IAAMC,IAAN,qBAAwBnD,GAAM6F,GAhBnB,gBAgB1BzC,EAhB0B,EAgB1BA,KAERtE,EAAS,CACP9E,KJtG8B,uBIuG9BE,QAASkJ,IApBuB,kDA2BlB,kCAJVE,EACJ,KAAMD,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAEVxE,EAASD,KAEXC,EAAS,CACP9E,KJjH2B,oBIkH3BE,QAASoJ,IAhCuB,0DAAR,0DkBvDtBxE,EC4FoB,uCAAM,WAAOA,EAAU8G,GAAjB,yBAAA3C,EAAA,sEAE9BnE,EAAS,CAAE9E,KrBtHsB,0BqBoHH,EAGO4L,IAAhBlK,EAHS,EAGtBD,UAAaC,SACfmK,EAAS,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYrK,EAASsK,SAJhC,SAKP9C,IAAMC,IAAN,uBAAkC0C,GAL3B,gBAKtBzC,EALsB,EAKtBA,KAERtE,EAAS,CAAE9E,KrB1HsB,wBqB0HOE,QAASkJ,IAPnB,kDAad,kCAJVE,EACJ,KAAMD,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAEVxE,EAASD,KAEXC,EAAS,CACP9E,KrBnI4B,qBqBoI5BE,QAASoJ,IAlBmB,0DAAN,0DDjGtB7F,EAAQS,KAAK,YAWd,CAACY,EAAUrB,EAAS/B,EAAUG,EAAMnB,IAWvC,OACE,kBAACgG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK6D,GAAI,GACP,4CACClB,GAAW,kBAAC,EAAD,CAAS1E,QAAQ,UAAU0E,GAEtC5I,GAAW,kBAAC,EAAD,CAASkE,QAAQ,WAAjB,mBACX3E,EACC,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GAE3B,kBAACwD,EAAA,EAAD,CAAMC,SArBQ,SAACC,GACrBA,EAAEC,iBACEwJ,IAAaM,EACfE,EAAW,0BAEXlJ,ElB+E2B,SAACjD,GAAD,8CAAU,WAAOiD,EAAU8G,GAAjB,yBAAA3C,EAAA,sEAEvCnE,EAAS,CACP9E,KJvHqC,gCIoHA,EAQnC4L,IADWlK,EAPwB,EAOrCD,UAAaC,SAGTmK,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BpK,EAASsK,SAbD,SAiBhB9C,IAAMmF,IAAN,qBAAgCxM,EAAMgK,GAjBtB,gBAiB/BzC,EAjB+B,EAiB/BA,KAERtE,EAAS,CACP9E,KJvIqC,8BIwIrCE,QAASkJ,IAEXtE,EAAS,CACP9E,KJzJ4B,qBI0J5BE,QAASkJ,IAEXvG,aAAa0J,QAAQ,WAAYxJ,KAAKyJ,UAAUpD,IA3BT,kDAiCvB,kCAJVE,EACJ,KAAMD,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAEVxE,EAASD,KAEXC,EAAS,CACP9E,KJvJkC,2BIwJlCE,QAASoJ,IAtC4B,0DAAV,wDkB/ElBgF,CAAkB,CAAEtI,GAAInE,EAAKsF,IAAK9C,OAAMiJ,QAAOE,gBAiBlD,kBAAC3J,EAAA,EAAKqI,MAAN,CAAYC,UAAU,QACpB,kBAACtI,EAAA,EAAKuI,MAAN,aACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO8J,EAAQ9J,EAAEQ,OAAOC,WAItC,kBAACX,EAAA,EAAKqI,MAAN,CAAYC,UAAU,SACpB,kBAACtI,EAAA,EAAKuI,MAAN,sBACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,QACLyE,YAAY,cACZD,MAAO8I,EACPhJ,SAAU,SAACP,GAAD,OAAOwJ,EAASxJ,EAAEQ,OAAOC,WAIvC,kBAACX,EAAA,EAAKqI,MAAN,CAAYC,UAAU,YACpB,kBAACtI,EAAA,EAAKuI,MAAN,iBACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,WACLyE,YAAY,iBACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAY1J,EAAEQ,OAAOC,WAI1C,kBAACX,EAAA,EAAKqI,MAAN,CAAYC,UAAU,mBACpB,kBAACtI,EAAA,EAAKuI,MAAN,yBACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,WACLyE,YAAY,mBACZD,MAAOsJ,EACPxJ,SAAU,SAACP,GAAD,OAAOgK,EAAmBhK,EAAEQ,OAAOC,WAIjD,kBAACG,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,WAA9B,YAMN,kBAAC+B,EAAA,EAAD,CAAK6D,GAAI,GACP,yCACC2D,EACC,kBAAC,EAAD,MACEC,EACF,kBAAC,EAAD,CAASxJ,QAAQ,UAAUwJ,GAE3B,kBAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACjK,UAAU,YACjD,+BACE,4BACE,kCACA,oCACA,qCACA,oCACA,yCACA,+BAGJ,+BACGhC,EAAOpB,KAAI,SAACc,GAAD,OACV,wBAAIyG,IAAKzG,EAAM+E,KACb,4BAAK/E,EAAM+E,KACX,4BAAK/E,EAAMqJ,UAAUC,UAAU,EAAG,KAClC,4BAAKtJ,EAAMwM,YACX,4BACGxM,EAAMyM,OACLzM,EAAM0M,OAAOpD,UAAU,EAAG,IAE1B,uBAAGhH,UAAU,eAAeqC,MAAO,CAAED,MAAO,UAGhD,4BACG1E,EAAM2M,YACL3M,EAAM4M,YAAYtD,UAAU,EAAG,IAE/B,uBAAGhH,UAAU,eAAeqC,MAAO,CAAED,MAAO,UAGhD,4BACE,kBAAC,gBAAD,CAAenB,GAAE,iBAAYvD,EAAM+E,MACjC,kBAACxC,EAAA,EAAD,CAAQD,UAAU,SAASE,QAAQ,SAAnC,sBExGPqK,GA9CO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5C,OACE,kBAACnJ,EAAA,EAAD,CAAKxB,UAAU,+BACb,kBAACwB,EAAA,EAAII,KAAL,KACG4I,EACC,kBAAC,gBAAD,CAAevJ,GAAG,UAChB,kBAACO,EAAA,EAAIC,KAAL,iBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAUmF,UAAQ,GAAlB,YAIJ,kBAACpF,EAAA,EAAII,KAAL,KACG6I,EACC,kBAAC,gBAAD,CAAexJ,GAAG,aAChB,kBAACO,EAAA,EAAIC,KAAL,kBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAUmF,UAAQ,GAAlB,aAIJ,kBAACpF,EAAA,EAAII,KAAL,KACG8I,EACC,kBAAC,gBAAD,CAAezJ,GAAG,YAChB,kBAACO,EAAA,EAAIC,KAAL,iBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAUmF,UAAQ,GAAlB,YAIJ,kBAACpF,EAAA,EAAII,KAAL,KACG+I,EACC,kBAAC,gBAAD,CAAe1J,GAAG,eAChB,kBAACO,EAAA,EAAIC,KAAL,qBAGF,kBAACD,EAAA,EAAIC,KAAL,CAAUmF,UAAQ,GAAlB,kBCsCKgE,GA1EQ,SAAC,GAAiB,IAAf7L,EAAc,EAAdA,QAEhBxC,EADKoE,aAAY,SAACxF,GAAD,OAAWA,EAAMkB,QAClCE,gBAF8B,EAIRyC,mBAASzC,EAAgBsO,SAJjB,mBAI/BA,EAJ+B,KAItBC,EAJsB,OAKd9L,mBAASzC,EAAgBwO,MALX,mBAK/BA,EAL+B,KAKzBC,EALyB,OAMFhM,mBAASzC,EAAgB0O,YANvB,mBAM/BA,EAN+B,KAMnBC,EANmB,OAORlM,mBAASzC,EAAgB4O,SAPjB,mBAO/BA,EAP+B,KAOtBC,EAPsB,KAShChL,EAAWM,cAQjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAe8J,OAAK,EAACC,OAAK,IAC1B,wCACA,kBAACtL,EAAA,EAAD,CAAMC,SAVY,SAACC,GRiBU,IAACqF,EQhBhCrF,EAAEC,iBACFc,GRegCsE,EQfH,CAAEmG,UAASE,OAAME,aAAYE,WRejB,SAAC/K,GAC5CA,EAAS,CACP9E,KnBlCsC,6BmBmCtCE,QAASkJ,IAGXvG,aAAa0J,QAAQ,kBAAmBxJ,KAAKyJ,UAAUpD,OQpBrD3F,EAAQS,KAAK,cAQT,kBAACL,EAAA,EAAKqI,MAAN,CAAYC,UAAU,WACpB,kBAACtI,EAAA,EAAKuI,MAAN,gBACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,gBACZD,MAAO+K,EACPQ,UAAQ,EACRzL,SAAU,SAACP,GAAD,OAAOyL,EAAWzL,EAAEQ,OAAOC,WAIzC,kBAACX,EAAA,EAAKqI,MAAN,CAAYC,UAAU,QACpB,kBAACtI,EAAA,EAAKuI,MAAN,aACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,aACZD,MAAOiL,EACPM,UAAQ,EACRzL,SAAU,SAACP,GAAD,OAAO2L,EAAQ3L,EAAEQ,OAAOC,WAItC,kBAACX,EAAA,EAAKqI,MAAN,CAAYC,UAAU,cACpB,kBAACtI,EAAA,EAAKuI,MAAN,oBACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,oBACZD,MAAOmL,EACPI,UAAQ,EACRzL,SAAU,SAACP,GAAD,OAAO6L,EAAc7L,EAAEQ,OAAOC,WAI5C,kBAACX,EAAA,EAAKqI,MAAN,CAAYC,UAAU,WACpB,kBAACtI,EAAA,EAAKuI,MAAN,gBACA,kBAACvI,EAAA,EAAKO,QAAN,CACEpE,KAAK,OACLyE,YAAY,gBACZD,MAAOqL,EACPE,UAAQ,EACRzL,SAAU,SAACP,GAAD,OAAO+L,EAAW/L,EAAEQ,OAAOC,WAIzC,kBAACG,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,WAA9B,eCZOoL,GAtDO,SAAC,GAAiB,IAAfvM,EAAc,EAAdA,QACV4B,aAAY,SAACxF,GAAD,OAAWA,EAAMkB,QAClCE,gBAEasO,SACnB9L,EAAQS,KAAK,aALsB,MAQKR,mBAAS,UARd,mBAQ9BlC,EAR8B,KAQfyO,EARe,KAU/BnL,EAAWM,cAQjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAe8J,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,8CACA,kBAACvL,EAAA,EAAD,CAAMC,SAVY,SAACC,GTyBQ,IAACqF,ESxB9BrF,EAAEC,iBACFc,GTuB8BsE,ESvBH5H,ETuBY,SAACsD,GAC1CA,EAAS,CACP9E,KnB1CoC,2BmB2CpCE,QAASkJ,IAGXvG,aAAa0J,QAAQ,gBAAiBxJ,KAAKyJ,UAAUpD,OS5BnD3F,EAAQS,KAAK,iBAQT,kBAACL,EAAA,EAAKqI,MAAN,KACE,kBAACrI,EAAA,EAAKuI,MAAN,CAAY3E,GAAG,UAAf,iBACA,kBAACd,EAAA,EAAD,KACE,kBAAC9C,EAAA,EAAKqM,MAAN,CACElQ,KAAK,QACLmQ,MAAM,wBACNnK,GAAG,SACH3B,KAAK,gBACLG,MAAM,SACN4L,SAAO,EACP9L,SAAU,SAACP,GAAD,OAAOkM,EAAiBlM,EAAEQ,OAAOC,YAajD,kBAACG,EAAA,EAAD,CAAQ3E,KAAK,SAAS4E,QAAQ,WAA9B,eC0GOyL,GArJU,SAAC,GAAiB,IAAf5M,EAAc,EAAdA,QACpBqB,EAAWM,cAEXrE,EAAOsE,aAAY,SAACxF,GAAD,OAAWA,EAAMkB,QAErCA,EAAKE,gBAAgBsO,QAEdxO,EAAKS,eACfiC,EAAQS,KAAK,YAFbT,EAAQS,KAAK,aAKf,IAAMoM,EAAc,SAACC,GAAU,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAKrD,QAAQ,IAE5EnM,EAAK2P,WAAaJ,EAAYvP,EAAKC,UAAUgM,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAK2G,MAAQ3G,EAAK0J,MAAK,IAChG7J,EAAK4P,cAAgBL,EAAYvP,EAAK2P,WAAa,IAAS,EAAO,KACnE3P,EAAK6P,SAAWN,EAAY3D,QAAQ,IAAO5L,EAAK2P,YAAYxD,QAAQ,KACpEnM,EAAK6N,WAAa0B,EAAY3D,OAAO5L,EAAK2P,YAAc/D,OAAO5L,EAAK4P,eAAiBhE,OAAO5L,EAAK6P,WAEjG,IAAMzO,EAAckD,aAAY,SAACxF,GAAD,OAAWA,EAAMsC,eACzCC,EAA0BD,EAA1BC,MAAO1B,EAAmByB,EAAnBzB,QAASL,EAAU8B,EAAV9B,MAExB2I,qBAAU,WACJtI,IACFoE,EAAS,CAAE9E,K3BrBiB,uB2BsB5B8E,EAAS,CAAE9E,KzB/BiB,uByBgC5ByD,EAAQS,KAAR,iBAAuB9B,EAAM+E,SAE9B,CAAC1D,EAAS/C,IAgBb,OACE,oCACE,kBAAC,GAAD,CAAewO,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,kBAAC3I,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAACY,GAAA,EAAD,CAAWxG,QAAQ,SACjB,kBAACwG,GAAA,EAAU9E,KAAX,KACE,wCACA,2BACE,4CACCvF,EAAKE,gBAAgBsO,QAFxB,KAEmCxO,EAAKE,gBAAgBwO,KAAM,IAC3D1O,EAAKE,gBAAgB0O,WAHxB,IAGqC,IAClC5O,EAAKE,gBAAgB4O,UAI1B,kBAACzE,GAAA,EAAU9E,KAAX,KACE,8CACA,4CACCvF,EAAKS,eAGR,kBAAC4J,GAAA,EAAU9E,KAAX,KACE,2CAC2B,IAA1BvF,EAAKC,UAAUuK,OACd,kBAAC,EAAD,2BAEE,kBAACH,GAAA,EAAD,CAAWxG,QAAQ,SAChB7D,EAAKC,UAAUM,KAAI,SAACJ,EAAM2P,GAAP,OAClB,kBAACzF,GAAA,EAAU9E,KAAX,CAAgBuC,IAAKgI,GACnB,kBAACnK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAACf,EAAA,EAAD,CACEpC,IAAKnG,EAAKoG,MACVoC,IAAKxI,EAAKmD,KACVsF,OAAK,EACLoD,SAAO,KAGX,kBAACpG,EAAA,EAAD,KACE,kBAAC,OAAD,CAAMhB,GAAE,mBAAczE,EAAKX,UACxBW,EAAKmD,OAGV,kBAACsC,EAAA,EAAD,CAAK6D,GAAI,GACNtJ,EAAK0J,IADR,OACiB1J,EAAK2G,MADtB,OACiC3G,EAAK0J,IAAM1J,EAAK2G,gBAUnE,kBAAClB,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAACtD,EAAA,EAAD,KACE,kBAACkE,GAAA,EAAD,CAAWxG,QAAQ,SACjB,kBAACwG,GAAA,EAAU9E,KAAX,KACE,8CAEF,kBAAC8E,GAAA,EAAU9E,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAO5F,EAAK2P,cAGhB,kBAACtF,GAAA,EAAU9E,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,SAAO5F,EAAK4P,iBAGhB,kBAACvF,GAAA,EAAU9E,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,SAAO5F,EAAK6P,YAGhB,kBAACxF,GAAA,EAAU9E,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAO5F,EAAK6N,cAGhB,kBAACxD,GAAA,EAAU9E,KAAX,KACGjG,GAAS,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,IAEvC,kBAAC+K,GAAA,EAAU9E,KAAX,KACE,kBAAC3B,EAAA,EAAD,CACE3E,KAAK,SACL0E,UAAU,YACV4G,SAA6B,IAAnBvK,EAAKC,UACfuF,QA3GU,WACxBzB,EJhBuB,SAAC1C,GAAD,8CAAW,WAAO0C,EAAU8G,GAAjB,yBAAA3C,EAAA,6DACpCnE,EAAS,CAAE9E,KrBzBuB,yBqBwBE,WAGE4L,IAAflK,EAHa,EAG1BD,UAAaC,SACfmK,EAAS,CAAEC,QAAS,CAAE,eAAgB,mBAAoBC,cAAc,UAAD,OAAYrK,EAASsK,SAJhE,SAKX9C,IAAM+C,KAAN,cAA0B7J,EAAOyJ,GALtB,gBAK1BzC,EAL0B,EAK1BA,KACRtE,EAAS,CAAE9E,KrB7BqB,uBqB6BOE,QAASkJ,IAChDtE,EAAS,CAAE9E,KzB9BiB,eyB+B5B6C,aAAakC,WAAW,aARU,kDAWlB,kCADVuE,EAAU,KAAMD,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAElGxE,EAASD,KAEXC,EAAS,CAAE9E,KrBpCkB,oBqBoCOE,QAASoJ,IAdX,0DAAX,wDIiBrBwH,CAAY,CACVxO,WAAYvB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpBkP,WAAY3P,EAAK2P,WACjBC,cAAe5P,EAAK4P,cACpBC,SAAU7P,EAAK6P,SACfhC,WAAY7N,EAAK6N,gBA8FT,mB,oBCiCDmC,GApKK,SAAC,GAAwB,IAAD,cAanBR,EAbFpG,EAAqB,EAArBA,MAAO1G,EAAc,EAAdA,QACtBuN,EAAU7G,EAAMC,OAAOpE,GAEvBlB,EAAWM,cAHyB,EAIR1B,oBAAS,GAJD,mBAInCuN,EAJmC,KAIxBC,EAJwB,KAMpC7O,EAAegD,aAAY,SAACxF,GAAD,OAAWA,EAAMwC,gBAC1CD,EAA0BC,EAA1BD,MAAOnC,EAAmBoC,EAAnBpC,QAASI,EAAUgC,EAAVhC,MAGhBqB,EADU2D,aAAY,SAACxF,GAAD,OAAWA,EAAM4B,aACvCC,SAER,IAAKzB,EAAS,CAEZmC,EAAMsO,YADeH,EACUnO,EAAME,WAAW0K,QAAO,SAACC,EAAK/L,GAAN,OAAe+L,EAAM/L,EAAK2G,MAAQ3G,EAAK0J,MAAK,IAD5D4F,KAAKC,MAAY,IAANF,GAAa,KAAKrD,QAAQ,IAI9ElE,qBAAU,WLcmB,IAAChD,EKbvBtE,GAAU+B,EAAQS,KAAK,UACvB9B,GAASA,EAAM+E,MAAQ6J,GAASlM,GLYTkB,EKZkCgL,ELYnC,uCAAQ,WAAOlM,EAAU8G,GAAjB,yBAAA3C,EAAA,6DACrCnE,EAAS,CAAE9E,KrBtCwB,0BqBqCE,WAGE4L,IAAhBlK,EAHc,EAG3BD,UAAaC,SACfmK,EAAS,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYrK,EAASsK,SAJ3B,SAKZ9C,IAAMC,IAAN,sBAAyBnD,GAAM6F,GALnB,gBAK3BzC,EAL2B,EAK3BA,KAERtE,EAAS,CAAE9E,KrB3CsB,wBqB2COE,QAASkJ,IAPd,kDAanB,kCAJVE,EACJ,KAAMD,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAEVxE,EAASD,KAEXC,EAAS,CACP9E,KrBpD4B,qBqBqD5BE,QAASoJ,IAlBwB,0DAAR,4DKX1B,CAACxE,EAAUkM,EAAS5O,IAMvB,OAAOnC,EACL,kBAAC,EAAD,MACEI,EACF,kBAAC,EAAD,CAASuE,QAAQ,UAAUvE,GAEvB,oCACE,qCAAW+B,EAAM+E,KACjB,kBAACT,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAACY,GAAA,EAAD,CAAWxG,QAAQ,SACjB,kBAACwG,GAAA,EAAU9E,KAAX,KACE,wCACA,2BACE,0CADF,cAC2BlE,EAAMP,YADjC,aAC2B,EAAYwC,MAEvC,2BACE,2CAAyB,IACzB,uBAAGa,KAAI,2BAAY9C,EAAMP,YAAlB,aAAY,EAAYyL,QAA/B,UAAyClL,EAAMP,YAA/C,aAAyC,EAAYyL,QAEvD,2BACE,4CADF,UAEGlL,EAAMnB,uBAFT,aAEG,EAAuBsO,QAF1B,eAEqCnN,EAAMnB,uBAF3C,aAEqC,EAAuBwO,KAAM,IAFlE,UAGGrN,EAAMnB,uBAHT,aAGG,EAAuB0O,WAH1B,IAGuC,IAHvC,UAIGvN,EAAMnB,uBAJT,aAIG,EAAuB4O,SAEzBzN,EAAM2M,YACL,kBAAC,EAAD,CAASnK,QAAQ,WAAjB,gBACgBxC,EAAM4M,aAGpB,kBAAC,EAAD,CAASpK,QAAQ,UAAjB,kBAIN,kBAACwG,GAAA,EAAU9E,KAAX,KACE,8CACA,2BACE,4CACClE,EAAMZ,eAERY,EAAMyM,OACL,kBAAC,EAAD,CAASjK,QAAQ,WAAjB,WAAoCxC,EAAM0M,QAExC,kBAAC,EAAD,CAASlK,QAAQ,UAAjB,aAIN,kBAACwG,GAAA,EAAU9E,KAAX,KACE,2CAC6B,IAA5BlE,EAAME,WAAWiJ,OAChB,kBAAC,EAAD,uBAEE,kBAACH,GAAA,EAAD,CAAWxG,QAAQ,SAChBxC,EAAME,WAAWhB,KAAI,SAACJ,EAAM2P,GAAP,OACpB,kBAACzF,GAAA,EAAU9E,KAAX,CAAgBuC,IAAKgI,GACnB,kBAACnK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAACf,EAAA,EAAD,CACEpC,IAAKnG,EAAKoG,MACVoC,IAAKxI,EAAKmD,KACVsF,OAAK,EACLoD,SAAO,KAGX,kBAACpG,EAAA,EAAD,KACE,kBAAC,OAAD,CAAMhB,GAAE,mBAAczE,EAAKX,UACxBW,EAAKmD,OAGV,kBAACsC,EAAA,EAAD,CAAK6D,GAAI,GACNtJ,EAAK0J,IADR,OACiB1J,EAAK2G,MADtB,OACiC3G,EAAK0J,IAAM1J,EAAK2G,gBAUnE,kBAAClB,EAAA,EAAD,CAAK6D,GAAI,GACP,kBAACtD,EAAA,EAAD,KACE,kBAACkE,GAAA,EAAD,CAAWxG,QAAQ,SACjB,kBAACwG,GAAA,EAAU9E,KAAX,KACE,8CAEF,kBAAC8E,GAAA,EAAU9E,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOvE,EAAMsO,cAGjB,kBAACtF,GAAA,EAAU9E,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,SAAOvE,EAAMuO,iBAGjB,kBAACvF,GAAA,EAAU9E,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,SAAOvE,EAAMwO,YAGjB,kBAACxF,GAAA,EAAU9E,KAAX,KACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOvE,EAAMwM,cAIfqC,EACE,kBAAC,KAAD,CAAYvQ,SAAO,EAAC2F,MAAM,2BAA2B8K,UAnHpD,kBAAM1N,EAAQS,KAAK,MAmH0DkN,SAlH9E,kBAAMF,GAAa,KAkHnB,qBAEgB,kBAACvM,EAAA,EAAD,CAAQ4B,QAAS,kBAAM2K,GAAa,KAApC,iBAGnBxP,GACCA,EAAS8E,SACTpE,EAAMyM,SACLzM,EAAM2M,aAAgB,kBAAC3D,GAAA,EAAU9E,KAAX,KACrB,kBAAC3B,EAAA,EAAD,CACE3E,KAAK,SACL0E,UAAU,gBACV6B,QAhIC,kBAAMzB,ELwDH,SAAC1C,GAAD,8CAAW,WAAO0C,EAAU8G,GAAjB,yBAAA3C,EAAA,sEAEnCnE,EAAS,CACP9E,KrBrE+B,0BqBkEE,EAQ/B4L,IADWlK,EAPoB,EAOjCD,UAAaC,SAGTmK,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYrK,EAASsK,SAZH,SAgBZ9C,IAAMmF,IAAN,sBACNjM,EAAM+E,IADA,YAErB,GACA0E,GAnBiC,gBAgB3BzC,EAhB2B,EAgB3BA,KAMRtE,EAAS,CACP9E,KrBxF+B,wBqByF/BE,QAASkJ,IAxBwB,kDA+BnB,kCAJVE,EACJ,KAAMD,UAAY,KAAMA,SAASD,KAAKE,QAClC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAEVxE,EAASD,KAEXC,EAAS,CACP9E,KrBnG4B,qBqBoG5BE,QAASoJ,IApCwB,0DAAX,wDKxDY+H,CAAajP,MA6H/B,4BCpHPkP,GA1BH,WACV,OACE,kBAAC,gBAAD,KACE,kBAAC,EAAD,MACA,0BAAM5M,UAAU,QACd,kBAACgB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAO6L,KAAK,aAAaC,UAAWT,KACpC,kBAAC,IAAD,CAAOQ,KAAK,YAAYC,UAAWlC,KACnC,kBAAC,IAAD,CAAOiC,KAAK,WAAWC,UAAWxB,KAClC,kBAAC,IAAD,CAAOuB,KAAK,cAAcC,UAAWnB,KACrC,kBAAC,IAAD,CAAOkB,KAAK,SAASC,UAAWnE,KAChC,kBAAC,IAAD,CAAOkE,KAAK,YAAYC,UAAW5D,KACnC,kBAAC,IAAD,CAAO2D,KAAK,WAAWC,UAAWtD,KAClC,kBAAC,IAAD,CAAOqD,KAAK,eAAeC,UAAW7G,KACtC,kBAAC,IAAD,CAAO4G,KAAK,aAAaC,UAAW/E,KACpC,kBAAC,IAAD,CAAO8E,KAAK,mBAAmBC,UAAWtH,GAAYuH,OAAK,IAC3D,kBAAC,IAAD,CAAOF,KAAK,oBAAoBC,UAAWtH,GAAYuH,OAAK,IAC5D,kBAAC,IAAD,CAAOF,KAAK,oCAAoCC,UAAWtH,GAAYuH,OAAK,IAC5E,kBAAC,IAAD,CAAOF,KAAK,IAAIC,UAAWtH,GAAYuH,OAAK,MAGhD,kBAAC,EAAD,QCzBcC,QACW,cAA7BC,OAAO1M,SAAS2M,UAEe,UAA7BD,OAAO1M,SAAS2M,UAEhBD,OAAO1M,SAAS2M,SAASzH,MACvB,2DCTN0H,IAAS5L,OACP,kBAAC,IAAD,CAAU9C,MAAOA,GACf,kBAAC,GAAD,OAEF6B,SAAS8M,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhS,GACLiS,QAAQjS,MAAMA,EAAMiJ,a","file":"static/js/main.35ddca7d.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      }\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_CREATE_RESET,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (state = { loading: false, order: { orderItems: [] } }, action) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      }\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type='text'\n        name='q'\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder='Search Products...'\n        className='mr-sm-2 ml-sm-5'\n      ></Form.Control>\n      <Button type='submit' variant='outline-success' className='p-2'>\n        Search\n      </Button>\n    </Form>\n  )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  dispatch({ type: USER_LOGIN_REQUEST })\n  try {\n    const config = { headers: { 'Content-Type': 'application/json' } }\n    const { data } = await axios.post('/api/users/login', { email, password }, config)\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({ type: USER_LOGIN_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('cartItems')\n  localStorage.removeItem('shippingAddress')\n  localStorage.removeItem('paymentMethod')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n  document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>ProShop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>Copyright &copy; ProShop</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='my-3 p-3 rounded'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n\n        <Card.Text as='h3'>${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Carousel pause='hover' className='bg-dark'>\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className='carousel-caption'>\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nimport { logout } from './userActions'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\n  dispatch({ type: PRODUCT_LIST_REQUEST })\n  try {\n    const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data, })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  dispatch({ type: PRODUCT_DETAILS_REQUEST })\n  try {\n    const { data } = await axios.get(`/api/products/${id}`)\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_DELETE_REQUEST })\n  try {\n    const { userLogin: { userInfo } } = getState()\n    const config = { headers: { Authorization: `Bearer ${userInfo.token}` } }\n\n    await axios.delete(`/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Welcome To ProShop',\n  description: 'We sell the best products for cheap',\n  keywords: 'electronics, buy electronics, cheap electroincs',\n}\n\nexport default Meta\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = ({ match }) => {\n\n  const keyword = match.params.keyword\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n          <Link to='/' className='btn btn-light'>\n            Go Back\n          </Link>\n        )}\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n            <>\n              <Row>\n                {products.map((product) => (\n                  <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                    <Product product={product} />\n                  </Col>\n                ))}\n              </Row>\n              <Paginate\n                pages={pages}\n                page={page}\n                keyword={keyword ? keyword : ''}\n              />\n            </>\n          )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0)\n      setComment('')\n    }\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(listProductDetails(match.params.id))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n  }, [dispatch, match, successProductReview])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n            <>\n              <Meta title={product.name} />\n              <Row>\n                <Col md={6}>\n                  <Image src={product.image} alt={product.name} fluid />\n                </Col>\n                <Col md={3}>\n                  <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                      <h3>{product.name}</h3>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Rating\n                        value={product.rating}\n                        text={`${product.numReviews} reviews`}\n                      />\n                    </ListGroup.Item>\n                    <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                    <ListGroup.Item>\n                      Description: {product.description}\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Col>\n                <Col md={3}>\n                  <Card>\n                    <ListGroup variant='flush'>\n                      <ListGroup.Item>\n                        <Row>\n                          <Col>Price:</Col>\n                          <Col>\n                            <strong>${product.price}</strong>\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n\n                      <ListGroup.Item>\n                        <Row>\n                          <Col>Status:</Col>\n                          <Col>\n                            {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n\n                      {product.countInStock > 0 && (\n                        <ListGroup.Item>\n                          <Row>\n                            <Col>Qty</Col>\n                            <Col>\n                              <Form.Control\n                                as='select'\n                                value={qty}\n                                onChange={(e) => setQty(e.target.value)}\n                              >\n                                {[...Array(product.countInStock).keys()].map(\n                                  (x) => (\n                                    <option key={x + 1} value={x + 1}>\n                                      {x + 1}\n                                    </option>\n                                  )\n                                )}\n                              </Form.Control>\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      )}\n\n                      <ListGroup.Item>\n                        <Button\n                          onClick={addToCartHandler}\n                          className='btn-block'\n                          type='button'\n                          disabled={product.countInStock === 0}\n                        >\n                          Add To Cart\n                    </Button>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Card>\n                </Col>\n              </Row>\n              <Row>\n                <Col md={6}>\n                  <h2>Reviews</h2>\n                  {product.reviews.length === 0 && <Message>No Reviews</Message>}\n                  <ListGroup variant='flush'>\n                    {product.reviews.map((review) => (\n                      <ListGroup.Item key={review._id}>\n                        <strong>{review.name}</strong>\n                        <Rating value={review.rating} />\n                        <p>{review.createdAt.substring(0, 10)}</p>\n                        <p>{review.comment}</p>\n                      </ListGroup.Item>\n                    ))}\n                    <ListGroup.Item>\n                      <h2>Write a Customer Review</h2>\n                      {successProductReview && (\n                        <Message variant='success'>\n                          Review submitted successfully\n                        </Message>\n                      )}\n                      {loadingProductReview && <Loader />}\n                      {errorProductReview && (\n                        <Message variant='danger'>{errorProductReview}</Message>\n                      )}\n                      {userInfo ? (\n                        <Form onSubmit={submitHandler}>\n                          <Form.Group controlId='rating'>\n                            <Form.Label>Rating</Form.Label>\n                            <Form.Control\n                              as='select'\n                              value={rating}\n                              onChange={(e) => setRating(e.target.value)}\n                            >\n                              <option value=''>Select...</option>\n                              <option value='1'>1 - Poor</option>\n                              <option value='2'>2 - Fair</option>\n                              <option value='3'>3 - Good</option>\n                              <option value='4'>4 - Very Good</option>\n                              <option value='5'>5 - Excellent</option>\n                            </Form.Control>\n                          </Form.Group>\n                          <Form.Group controlId='comment'>\n                            <Form.Label>Comment</Form.Label>\n                            <Form.Control\n                              as='textarea'\n                              row='3'\n                              value={comment}\n                              onChange={(e) => setComment(e.target.value)}\n                            ></Form.Control>\n                          </Form.Group>\n                          <Button\n                            disabled={loadingProductReview}\n                            type='submit'\n                            variant='primary'\n                          >\n                            Submit\n                      </Button>\n                        </Form>\n                      ) : (\n                          <Message>\n                            Please <Link to='/login'>sign in</Link> to write a review{' '}\n                          </Message>\n                        )}\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Col>\n              </Row>\n            </>\n          )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to='/'>Go Back</Link>\n          </Message>\n        ) : (\n            <ListGroup variant='flush'>\n              {cartItems.map((item) => (\n                <ListGroup.Item key={item.product}>\n                  <Row>\n                    <Col md={2}>\n                      <Image src={item.image} alt={item.name} fluid rounded />\n                    </Col>\n                    <Col md={3}>\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\n                    </Col>\n                    <Col md={2}>${item.price}</Col>\n                    <Col md={2}>\n                      <Form.Control\n                        as='select'\n                        value={item.qty}\n                        onChange={(e) =>\n                          dispatch(\n                            addToCart(item.product, Number(e.target.value))\n                          )\n                        }\n                      >\n                        {[...Array(item.countInStock).keys()].map((x) => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                    <Col md={2}>\n                      <Button\n                        type='button'\n                        variant='light'\n                        onClick={() => removeFromCartHandler(item.product)}\n                      >\n                        <i className='fas fa-trash'></i>\n                      </Button>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_CREATE_REQUEST })\n  try {\n    const { userLogin: { userInfo } } = getState()\n    const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` } }\n    const { data } = await axios.post(`/api/orders`, order, config)\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data })\n    dispatch({ type: CART_CLEAR_ITEMS })\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({ type: ORDER_CREATE_FAIL, payload: message })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DETAILS_REQUEST })\n  try {\n    const { userLogin: { userInfo }, } = getState()\n    const config = { headers: { Authorization: `Bearer ${userInfo.token}` } }\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n    // console.log('getOrderDetails inside function ', data);\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data, })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_PAY_REQUEST })\n  try {\n    const { userLogin: { userInfo } } = getState()\n\n    const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}`, }, }\n    const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\n\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_LIST_MY_REQUEST, })\n    const { userLogin: { userInfo }, } = getState()\n    const config = { headers: { Authorization: `Bearer ${userInfo.token}` } }\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress.address) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n            {/* <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              name='paymentMethod'\n              value='Stripe'\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  if (!cart.shippingAddress.address) {\n    history.push('/shipping')\n  } else if (!cart.paymentMethod) {\n    history.push('/payment')\n  }\n\n  const addDecimals = (num) => { return (Math.round(num * 100) / 100).toFixed(2) }\n\n  cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100.00 ? 0.00 : 100.00)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice))\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      dispatch({ type: USER_DETAILS_RESET })\n      dispatch({ type: ORDER_CREATE_RESET })\n      history.push(`/order/${order._id}`)\n    }\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                  <ListGroup variant='flush'>\n                    {cart.cartItems.map((item, index) => (\n                      <ListGroup.Item key={index}>\n                        <Row>\n                          <Col md={1}>\n                            <Image\n                              src={item.image}\n                              alt={item.name}\n                              fluid\n                              rounded\n                            />\n                          </Col>\n                          <Col>\n                            <Link to={`/product/${item.product}`}>\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <Col md={4}>\n                            {item.qty} x ${item.price} = ${item.qty * item.price}\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Continue\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\n\nimport { getOrderDetails, deliverOrder } from '../actions/orderActions'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const dispatch = useDispatch()\n  const [showAlert, setShowAlert] = useState(false)\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    const addDecimals = (num) => { return (Math.round(num * 100) / 100).toFixed(2) }\n    order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n  }\n\n  useEffect(() => {\n    if (!userInfo) history.push('/login')\n    if (!order || order._id !== orderId) dispatch(getOrderDetails(orderId))\n  }, [dispatch, orderId, order])\n\n  const deliverHandler = () => dispatch(deliverOrder(order))\n  const confirmAlert = () => history.push('/')\n  const cancelAlert = () => setShowAlert(false)\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n        <>\n          <h1>Order {order._id}</h1>\n          <Row>\n            <Col md={8}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h2>Shipping</h2>\n                  <p>\n                    <strong>Name: </strong> {order.user?.name}\n                  </p>\n                  <p>\n                    <strong>Email: </strong>{' '}\n                    <a href={`mailto:${order.user?.email}`}>{order.user?.email}</a>\n                  </p>\n                  <p>\n                    <strong>Address:</strong>\n                    {order.shippingAddress?.address}, {order.shippingAddress?.city}{' '}\n                    {order.shippingAddress?.postalCode},{' '}\n                    {order.shippingAddress?.country}\n                  </p>\n                  {order.isDelivered ? (\n                    <Message variant='success'>\n                      Delivered on {order.deliveredAt}\n                    </Message>\n                  ) : (\n                      <Message variant='danger'>Not Delivered</Message>\n                    )}\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <h2>Payment Method</h2>\n                  <p>\n                    <strong>Method: </strong>\n                    {order.paymentMethod}\n                  </p>\n                  {order.isPaid ? (\n                    <Message variant='success'>Paid on {order.paidAt}</Message>\n                  ) : (\n                      <Message variant='danger'>Not Paid</Message>\n                    )}\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <h2>Order Items</h2>\n                  {order.orderItems.length === 0 ? (\n                    <Message>Order is empty</Message>\n                  ) : (\n                      <ListGroup variant='flush'>\n                        {order.orderItems.map((item, index) => (\n                          <ListGroup.Item key={index}>\n                            <Row>\n                              <Col md={1}>\n                                <Image\n                                  src={item.image}\n                                  alt={item.name}\n                                  fluid\n                                  rounded\n                                />\n                              </Col>\n                              <Col>\n                                <Link to={`/product/${item.product}`}>\n                                  {item.name}\n                                </Link>\n                              </Col>\n                              <Col md={4}>\n                                {item.qty} x ${item.price} = ${item.qty * item.price}\n                              </Col>\n                            </Row>\n                          </ListGroup.Item>\n                        ))}\n                      </ListGroup>\n                    )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <h2>Order Summary</h2>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Items</Col>\n                      <Col>${order.itemsPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Shipping</Col>\n                      <Col>${order.shippingPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Tax</Col>\n                      <Col>${order.taxPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Total</Col>\n                      <Col>${order.totalPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {\n                    showAlert ?\n                      <SweetAlert success title=\"Congrats Order Completed\" onConfirm={confirmAlert} onCancel={cancelAlert}>\n                        Continue Shopping\n                      </SweetAlert> : <Button onClick={() => setShowAlert(true)}>Confirm Order</Button>\n                  }\n\n                  {userInfo &&\n                    userInfo.isAdmin &&\n                    order.isPaid &&\n                    !order.isDelivered && (<ListGroup.Item>\n                      <Button\n                        type='button'\n                        className='btn btn-block'\n                        onClick={deliverHandler}\n                      >\n                        Mark As Delivered\n                    </Button>\n                    </ListGroup.Item>\n                    )}\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </>\n      )\n}\n\nexport default OrderScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}